@page "/Login"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IUserService UserService;

<div class="card">
   <h3>Login</h3>
    <div class="form-group field">
        <div>
        <label>User name:</label>
            <input type="text" @bind="username" @bind:event="oninput"/>
            </div>
        <label>Password</label>
        <input type="text" @bind="password" @bind:event="oninput"/>

        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="login" disabled="@(string.IsNullOrEmpty(username))"  class="acceptbtn">Login</button>
    </div>
</div>

@code {

    private string username = "";
    private string password = "";
    private bool loggedin = false;
    private string resultMsg = "";
    private string color = "";
    private async Task login()
    {
        resultMsg = "";
        try
        {
            UserLoginDTO user = await UserService.Login(new UserCreationDTO(username, password));
            Console.WriteLine(user.userName + " and " + user.login);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
    
}